{
  "version": 3,
  "sources": ["../../../src/worker.js", "../../../../../../../../../opt/homebrew/Cellar/nvm/0.39.7/versions/node/v21.6.2/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../../../../opt/homebrew/Cellar/nvm/0.39.7/versions/node/v21.6.2/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-mtLrLF/middleware-insertion-facade.js", "../../../../../../../../../opt/homebrew/Cellar/nvm/0.39.7/versions/node/v21.6.2/lib/node_modules/wrangler/templates/middleware/common.ts", "../bundle-mtLrLF/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/wushaoneng/Desktop/AI_project/audio-editor-mvp/workers/.wrangler/tmp/dev-iGz4xV",
  "sourcesContent": ["// Cloudflare Workers - \u97F3\u9891\u8F6C\u5F55\u670D\u52A1\nexport default {\n    async fetch(request, env, ctx) {\n        const url = new URL(request.url);\n        \n        // \u5904\u7406 CORS \u9884\u68C0\u8BF7\u6C42\n        if (request.method === 'OPTIONS') {\n            return new Response(null, {\n                headers: {\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Allow-Methods': 'POST, OPTIONS',\n                    'Access-Control-Allow-Headers': 'Content-Type',\n                    'Access-Control-Max-Age': '86400',\n                }\n            });\n        }\n\n        // \u8DEF\u7531\u5904\u7406\n        if (url.pathname === '/api/transcribe' && request.method === 'POST') {\n            return await handleTranscription(request, env);\n        }\n\n        // \u5065\u5EB7\u68C0\u67E5\u7AEF\u70B9\n        if (url.pathname === '/health' && request.method === 'GET') {\n            return new Response(JSON.stringify({ \n                status: 'ok', \n                timestamp: new Date().toISOString(),\n                service: 'audio-transcription'\n            }), {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*'\n                }\n            });\n        }\n\n        // \u6839\u8DEF\u5F84\u8FD4\u56DE\u670D\u52A1\u4FE1\u606F\n        if (url.pathname === '/' && request.method === 'GET') {\n            return new Response(JSON.stringify({\n                service: 'Audio Transcription API',\n                version: '1.0.0',\n                endpoints: {\n                    transcribe: '/api/transcribe (POST)',\n                    health: '/health (GET)'\n                }\n            }), {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*'\n                }\n            });\n        }\n\n        // \u672A\u5339\u914D\u7684\u8DEF\u7531\n        return new Response('Not Found', {\n            status: 404,\n            headers: {\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n    }\n};\n\n// \u5904\u7406\u8F6C\u5F55\u8BF7\u6C42\nasync function handleTranscription(request, env) {\n\n    try {\n        console.log('\uD83C\uDFA4 \u6536\u5230\u8F6C\u5F55\u8BF7\u6C42');\n\n        // \u89E3\u6790\u8BF7\u6C42\u6570\u636E\n        const requestData = await request.json();\n        const { audioBase64, mimeType, compressed } = requestData;\n\n        console.log('\uD83D\uDCCA \u8BF7\u6C42\u4FE1\u606F:', {\n            hasAudio: !!audioBase64,\n            audioSize: audioBase64 ? audioBase64.length : 0,\n            mimeType,\n            compressed\n        });\n\n        if (!audioBase64) {\n            throw new Error('\u7F3A\u5C11\u97F3\u9891\u6570\u636E');\n        }\n\n        // \u68C0\u67E5 API \u5BC6\u94A5\n        if (!env.GEMINI_API_KEY) {\n            throw new Error('API\u5BC6\u94A5\u672A\u914D\u7F6E\uFF0C\u8BF7\u68C0\u67E5\u73AF\u5883\u53D8\u91CF');\n        }\n\n        // \u5904\u7406\u538B\u7F29\u6570\u636E\n        let audioData = audioBase64;\n        if (compressed) {\n            console.log('\uD83D\uDCE6 \u89E3\u538B\u7F29\u97F3\u9891\u6570\u636E');\n            audioData = await decompressBase64(audioBase64);\n        }\n\n        // \u8C03\u7528 Gemini Flash Lite API\n        console.log('\uD83E\uDD16 \u8C03\u7528 Gemini API');\n        const transcriptionResult = await callGeminiAPI(audioData, mimeType, env.GEMINI_API_KEY);\n\n        console.log('\u2705 \u8F6C\u5F55\u5B8C\u6210');\n\n        return new Response(JSON.stringify(transcriptionResult), {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': '*',\n            }\n        });\n\n    } catch (error) {\n        console.error('\u274C \u8F6C\u5F55\u5931\u8D25:', error.message);\n        console.error('\u274C \u9519\u8BEF\u5806\u6808:', error.stack);\n\n        // \u6839\u636E\u9519\u8BEF\u7C7B\u578B\u8FD4\u56DE\u4E0D\u540C\u7684\u72B6\u6001\u7801\n        let status = 500;\n        if (error.message.includes('API\u5BC6\u94A5')) {\n            status = 401;\n        } else if (error.message.includes('\u9891\u7387\u8FC7\u9AD8')) {\n            status = 429;\n        } else if (error.message.includes('\u8FC7\u5927')) {\n            status = 413;\n        }\n\n        return new Response(JSON.stringify({\n            error: error.message,\n            timestamp: new Date().toISOString(),\n            requestId: crypto.randomUUID()\n        }), {\n            status,\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': '*',\n            }\n        });\n    }\n}\n\n// \u8C03\u7528 Gemini Flash Lite API\nasync function callGeminiAPI(audioBase64, mimeType, apiKey) {\n    if (!apiKey) {\n        throw new Error('API\u5BC6\u94A5\u672A\u914D\u7F6E');\n    }\n\n    const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent?key=${apiKey}`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            contents: [{\n                parts: [{\n                    inline_data: {\n                        mime_type: mimeType || 'audio/mpeg',\n                        data: audioBase64\n                    }\n                }, {\n                    text: `Please transcribe this audio and provide timestamps for each sentence or phrase. \n\nCRITICAL: Return ONLY a valid JSON object in this EXACT format:\n{\n  \"segments\": [\n    {\"text\": \"Hello, I'm Neil.\", \"startTime\": \"00:05\", \"endTime\": \"00:08\"},\n    {\"text\": \"Welcome to our show.\", \"startTime\": \"00:09\", \"endTime\": \"00:12\"}\n  ]\n}\n\nSTRICT Requirements:\n- startTime and endTime MUST be strings in MM:SS format (e.g., \"00:05\", \"01:23\")\n- Use quotes around time values: \"00:05\" NOT 5\n- Break text into natural sentences or phrases\n- Provide accurate timestamps for each segment\n- Do not include any markdown, code blocks, explanations, or other text\n- Return ONLY the JSON object, nothing else\n\nExample of CORRECT format:\n{\"segments\": [{\"text\": \"From BBC learning English.com.\", \"startTime\": \"00:05\", \"endTime\": \"00:10\"}]}`\n                }]\n            }]\n        })\n    });\n\n    if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Gemini API \u9519\u8BEF:', response.status, errorText);\n\n        if (response.status === 429) {\n            throw new Error('API\u8C03\u7528\u9891\u7387\u8FC7\u9AD8\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5');\n        } else if (response.status === 401) {\n            throw new Error('API\u5BC6\u94A5\u65E0\u6548');\n        } else if (response.status === 413) {\n            throw new Error('\u97F3\u9891\u6587\u4EF6\u8FC7\u5927\uFF0C\u8BF7\u9009\u62E9\u8F83\u5C0F\u7684\u6587\u4EF6');\n        } else {\n            throw new Error(`API\u8C03\u7528\u5931\u8D25: ${response.status}`);\n        }\n    }\n\n    const result = await response.json();\n\n    // \u89E3\u6790 Gemini \u54CD\u5E94\n    if (result.candidates && result.candidates.length > 0) {\n        const content = result.candidates[0].content;\n        if (content && content.parts && content.parts.length > 0) {\n            const text = content.parts[0].text;\n\n            try {\n                // \u5C1D\u8BD5\u89E3\u6790 JSON \u683C\u5F0F\u7684\u8F6C\u5F55\u7ED3\u679C\n                const transcriptionData = JSON.parse(text);\n                if (transcriptionData.segments) {\n                    return transcriptionData;\n                }\n            } catch (parseError) {\n                console.warn('\u65E0\u6CD5\u89E3\u6790JSON\u683C\u5F0F\uFF0C\u4F7F\u7528\u6587\u672C\u683C\u5F0F:', parseError);\n            }\n\n            // \u5982\u679C\u4E0D\u662FJSON\u683C\u5F0F\uFF0C\u521B\u5EFA\u7B80\u5355\u7684\u6587\u672C\u6BB5\u843D\n            return {\n                segments: [{\n                    text: text.trim(),\n                    startTime: 0,\n                    endTime: 0,\n                    confidence: 0.8\n                }]\n            };\n        }\n    }\n\n    throw new Error('\u672A\u6536\u5230\u6709\u6548\u7684\u8F6C\u5F55\u7ED3\u679C');\n}\n\n// \u89E3\u538B\u7F29 base64 \u6570\u636E\uFF08\u5982\u679C\u9700\u8981\uFF09\nasync function decompressBase64(compressedBase64) {\n    // \u8FD9\u91CC\u9700\u8981\u5B9E\u73B0 GZIP \u89E3\u538B\u7F29\u903B\u8F91\n    // \u7531\u4E8E Cloudflare Workers \u73AF\u5883\u9650\u5236\uFF0C\u6682\u65F6\u76F4\u63A5\u8FD4\u56DE\u539F\u6570\u636E\n    // \u5728\u5B9E\u9645\u90E8\u7F72\u65F6\u9700\u8981\u6DFB\u52A0 pako \u6216\u5176\u4ED6\u89E3\u538B\u7F29\u5E93\n    console.warn('\u89E3\u538B\u7F29\u529F\u80FD\u6682\u672A\u5B9E\u73B0\uFF0C\u8FD4\u56DE\u539F\u6570\u636E');\n    return compressedBase64;\n}", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/wushaoneng/Desktop/AI_project/audio-editor-mvp/workers/src/worker.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/opt/homebrew/Cellar/nvm/0.39.7/versions/node/v21.6.2/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/opt/homebrew/Cellar/nvm/0.39.7/versions/node/v21.6.2/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/wushaoneng/Desktop/AI_project/audio-editor-mvp/workers/src/worker.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/wushaoneng/Desktop/AI_project/audio-editor-mvp/workers/.wrangler/tmp/bundle-mtLrLF/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/opt/homebrew/Cellar/nvm/0.39.7/versions/node/v21.6.2/lib/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/wushaoneng/Desktop/AI_project/audio-editor-mvp/workers/.wrangler/tmp/bundle-mtLrLF/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/wushaoneng/Desktop/AI_project/audio-editor-mvp/workers/.wrangler/tmp/bundle-mtLrLF/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": ";;;;AACA,IAAO,iBAAQ;AAAA,EACX,MAAM,MAAM,SAAS,KAAK,KAAK;AAC3B,UAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAG/B,QAAI,QAAQ,WAAW,WAAW;AAC9B,aAAO,IAAI,SAAS,MAAM;AAAA,QACtB,SAAS;AAAA,UACL,+BAA+B;AAAA,UAC/B,gCAAgC;AAAA,UAChC,gCAAgC;AAAA,UAChC,0BAA0B;AAAA,QAC9B;AAAA,MACJ,CAAC;AAAA,IACL;AAGA,QAAI,IAAI,aAAa,qBAAqB,QAAQ,WAAW,QAAQ;AACjE,aAAO,MAAM,oBAAoB,SAAS,GAAG;AAAA,IACjD;AAGA,QAAI,IAAI,aAAa,aAAa,QAAQ,WAAW,OAAO;AACxD,aAAO,IAAI,SAAS,KAAK,UAAU;AAAA,QAC/B,QAAQ;AAAA,QACR,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,SAAS;AAAA,MACb,CAAC,GAAG;AAAA,QACA,SAAS;AAAA,UACL,gBAAgB;AAAA,UAChB,+BAA+B;AAAA,QACnC;AAAA,MACJ,CAAC;AAAA,IACL;AAGA,QAAI,IAAI,aAAa,OAAO,QAAQ,WAAW,OAAO;AAClD,aAAO,IAAI,SAAS,KAAK,UAAU;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,WAAW;AAAA,UACP,YAAY;AAAA,UACZ,QAAQ;AAAA,QACZ;AAAA,MACJ,CAAC,GAAG;AAAA,QACA,SAAS;AAAA,UACL,gBAAgB;AAAA,UAChB,+BAA+B;AAAA,QACnC;AAAA,MACJ,CAAC;AAAA,IACL;AAGA,WAAO,IAAI,SAAS,aAAa;AAAA,MAC7B,QAAQ;AAAA,MACR,SAAS;AAAA,QACL,+BAA+B;AAAA,MACnC;AAAA,IACJ,CAAC;AAAA,EACL;AACJ;AAGA,eAAe,oBAAoB,SAAS,KAAK;AAE7C,MAAI;AACA,YAAQ,IAAI,gDAAW;AAGvB,UAAM,cAAc,MAAM,QAAQ,KAAK;AACvC,UAAM,EAAE,aAAa,UAAU,WAAW,IAAI;AAE9C,YAAQ,IAAI,uCAAY;AAAA,MACpB,UAAU,CAAC,CAAC;AAAA,MACZ,WAAW,cAAc,YAAY,SAAS;AAAA,MAC9C;AAAA,MACA;AAAA,IACJ,CAAC;AAED,QAAI,CAAC,aAAa;AACd,YAAM,IAAI,MAAM,sCAAQ;AAAA,IAC5B;AAGA,QAAI,CAAC,IAAI,gBAAgB;AACrB,YAAM,IAAI,MAAM,mFAAkB;AAAA,IACtC;AAGA,QAAI,YAAY;AAChB,QAAI,YAAY;AACZ,cAAQ,IAAI,sDAAY;AACxB,kBAAY,MAAM,iBAAiB,WAAW;AAAA,IAClD;AAGA,YAAQ,IAAI,mCAAkB;AAC9B,UAAM,sBAAsB,MAAM,cAAc,WAAW,UAAU,IAAI,cAAc;AAEvF,YAAQ,IAAI,iCAAQ;AAEpB,WAAO,IAAI,SAAS,KAAK,UAAU,mBAAmB,GAAG;AAAA,MACrD,SAAS;AAAA,QACL,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,MACnC;AAAA,IACJ,CAAC;AAAA,EAEL,SAAS,OAAO;AACZ,YAAQ,MAAM,oCAAW,MAAM,OAAO;AACtC,YAAQ,MAAM,oCAAW,MAAM,KAAK;AAGpC,QAAI,SAAS;AACb,QAAI,MAAM,QAAQ,SAAS,iBAAO,GAAG;AACjC,eAAS;AAAA,IACb,WAAW,MAAM,QAAQ,SAAS,0BAAM,GAAG;AACvC,eAAS;AAAA,IACb,WAAW,MAAM,QAAQ,SAAS,cAAI,GAAG;AACrC,eAAS;AAAA,IACb;AAEA,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MAC/B,OAAO,MAAM;AAAA,MACb,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,OAAO,WAAW;AAAA,IACjC,CAAC,GAAG;AAAA,MACA;AAAA,MACA,SAAS;AAAA,QACL,gBAAgB;AAAA,QAChB,+BAA+B;AAAA,MACnC;AAAA,IACJ,CAAC;AAAA,EACL;AACJ;AAvEe;AA0Ef,eAAe,cAAc,aAAa,UAAU,QAAQ;AACxD,MAAI,CAAC,QAAQ;AACT,UAAM,IAAI,MAAM,mCAAU;AAAA,EAC9B;AAEA,QAAM,WAAW,MAAM,MAAM,gGAAgG,MAAM,IAAI;AAAA,IACnI,QAAQ;AAAA,IACR,SAAS;AAAA,MACL,gBAAgB;AAAA,IACpB;AAAA,IACA,MAAM,KAAK,UAAU;AAAA,MACjB,UAAU,CAAC;AAAA,QACP,OAAO,CAAC;AAAA,UACJ,aAAa;AAAA,YACT,WAAW,YAAY;AAAA,YACvB,MAAM;AAAA,UACV;AAAA,QACJ,GAAG;AAAA,UACC,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAoBV,CAAC;AAAA,MACL,CAAC;AAAA,IACL,CAAC;AAAA,EACL,CAAC;AAED,MAAI,CAAC,SAAS,IAAI;AACd,UAAM,YAAY,MAAM,SAAS,KAAK;AACtC,YAAQ,MAAM,4BAAkB,SAAS,QAAQ,SAAS;AAE1D,QAAI,SAAS,WAAW,KAAK;AACzB,YAAM,IAAI,MAAM,6EAAiB;AAAA,IACrC,WAAW,SAAS,WAAW,KAAK;AAChC,YAAM,IAAI,MAAM,6BAAS;AAAA,IAC7B,WAAW,SAAS,WAAW,KAAK;AAChC,YAAM,IAAI,MAAM,4FAAiB;AAAA,IACrC,OAAO;AACH,YAAM,IAAI,MAAM,gCAAY,SAAS,MAAM,EAAE;AAAA,IACjD;AAAA,EACJ;AAEA,QAAM,SAAS,MAAM,SAAS,KAAK;AAGnC,MAAI,OAAO,cAAc,OAAO,WAAW,SAAS,GAAG;AACnD,UAAM,UAAU,OAAO,WAAW,CAAC,EAAE;AACrC,QAAI,WAAW,QAAQ,SAAS,QAAQ,MAAM,SAAS,GAAG;AACtD,YAAM,OAAO,QAAQ,MAAM,CAAC,EAAE;AAE9B,UAAI;AAEA,cAAM,oBAAoB,KAAK,MAAM,IAAI;AACzC,YAAI,kBAAkB,UAAU;AAC5B,iBAAO;AAAA,QACX;AAAA,MACJ,SAAS,YAAY;AACjB,gBAAQ,KAAK,uFAAsB,UAAU;AAAA,MACjD;AAGA,aAAO;AAAA,QACH,UAAU,CAAC;AAAA,UACP,MAAM,KAAK,KAAK;AAAA,UAChB,WAAW;AAAA,UACX,SAAS;AAAA,UACT,YAAY;AAAA,QAChB,CAAC;AAAA,MACL;AAAA,IACJ;AAAA,EACJ;AAEA,QAAM,IAAI,MAAM,8DAAY;AAChC;AAzFe;AA4Ff,eAAe,iBAAiB,kBAAkB;AAI9C,UAAQ,KAAK,4FAAiB;AAC9B,SAAO;AACX;AANe;;;ACpOf,IAAM,YAAwB,8BAAO,SAAS,KAAK,MAAM,kBAAkB;AAC1E,MAAI;AACH,WAAO,MAAM,cAAc,KAAK,SAAS,GAAG;AAAA,EAC7C,UAAE;AACD,QAAI;AACH,UAAI,QAAQ,SAAS,QAAQ,CAAC,QAAQ,UAAU;AAC/C,cAAM,SAAS,QAAQ,KAAK,UAAU;AACtC,eAAO,EAAE,MAAM,OAAO,KAAK,GAAG,MAAM;AAAA,QAAC;AAAA,MACtC;AAAA,IACD,SAAS,GAAG;AACX,cAAQ,MAAM,4CAA4C,CAAC;AAAA,IAC5D;AAAA,EACD;AACD,GAb8B;AAe9B,IAAO,6CAAQ;;;ACRf,SAAS,YAAY,GAAmB;AACvC,SAAO;AAAA,IACN,MAAM,GAAG;AAAA,IACT,SAAS,GAAG,WAAW,OAAO,CAAC;AAAA,IAC/B,OAAO,GAAG;AAAA,IACV,OAAO,GAAG,UAAU,SAAY,SAAY,YAAY,EAAE,KAAK;AAAA,EAChE;AACD;AAPS;AAUT,IAAM,YAAwB,8BAAO,SAAS,KAAK,MAAM,kBAAkB;AAC1E,MAAI;AACH,WAAO,MAAM,cAAc,KAAK,SAAS,GAAG;AAAA,EAC7C,SAAS,GAAQ;AAChB,UAAM,QAAQ,YAAY,CAAC;AAC3B,WAAO,SAAS,KAAK,OAAO;AAAA,MAC3B,QAAQ;AAAA,MACR,SAAS,EAAE,+BAA+B,OAAO;AAAA,IAClD,CAAC;AAAA,EACF;AACD,GAV8B;AAY9B,IAAO,2CAAQ;;;ACzBJ,IAAM,mCAAmC;AAAA,EAE9B;AAAA,EAAyB;AAC3C;AACA,IAAO,sCAAQ;;;ACcnB,IAAM,wBAAsC,CAAC;AAKtC,SAAS,uBAAuB,MAAqC;AAC3E,wBAAsB,KAAK,GAAG,KAAK,KAAK,CAAC;AAC1C;AAFgB;AAShB,SAAS,uBACR,SACA,KACA,KACA,UACA,iBACsB;AACtB,QAAM,CAAC,MAAM,GAAG,IAAI,IAAI;AACxB,QAAM,gBAAmC;AAAA,IACxC;AAAA,IACA,KAAK,YAAY,QAAQ;AACxB,aAAO,uBAAuB,YAAY,QAAQ,KAAK,UAAU,IAAI;AAAA,IACtE;AAAA,EACD;AACA,SAAO,KAAK,SAAS,KAAK,KAAK,aAAa;AAC7C;AAfS;AAiBF,SAAS,kBACf,SACA,KACA,KACA,UACA,iBACsB;AACtB,SAAO,uBAAuB,SAAS,KAAK,KAAK,UAAU;AAAA,IAC1D,GAAG;AAAA,IACH;AAAA,EACD,CAAC;AACF;AAXgB;;;AC3ChB,IAAM,iCAAN,MAAM,gCAA8D;AAAA,EAGnE,YACU,eACA,MACT,SACC;AAHQ;AACA;AAGT,SAAK,WAAW;AAAA,EACjB;AAAA,EArBD,OAYoE;AAAA;AAAA;AAAA,EAC1D;AAAA,EAUT,UAAU;AACT,QAAI,EAAE,gBAAgB,kCAAiC;AACtD,YAAM,IAAI,UAAU,oBAAoB;AAAA,IACzC;AAEA,SAAK,SAAS;AAAA,EACf;AACD;AAEA,SAAS,oBAAoB,QAA0C;AAEtE,MACC,qCAAqC,UACrC,iCAAiC,WAAW,GAC3C;AACD,WAAO;AAAA,EACR;AAEA,aAAW,cAAc,kCAAkC;AAC1D,wBAAoB,UAAU;AAAA,EAC/B;AAEA,QAAM,kBAA+C,gCACpD,SACA,KACA,KACC;AACD,QAAI,OAAO,UAAU,QAAW;AAC/B,YAAM,IAAI,MAAM,6CAA6C;AAAA,IAC9D;AACA,WAAO,OAAO,MAAM,SAAS,KAAK,GAAG;AAAA,EACtC,GATqD;AAWrD,SAAO;AAAA,IACN,GAAG;AAAA,IACH,MAAM,SAAS,KAAK,KAAK;AACxB,YAAM,aAAyB,gCAAU,MAAM,MAAM;AACpD,YAAI,SAAS,eAAe,OAAO,cAAc,QAAW;AAC3D,gBAAM,aAAa,IAAI;AAAA,YACtB,KAAK,IAAI;AAAA,YACT,KAAK,QAAQ;AAAA,YACb,MAAM;AAAA,YAAC;AAAA,UACR;AACA,iBAAO,OAAO,UAAU,YAAY,KAAK,GAAG;AAAA,QAC7C;AAAA,MACD,GAT+B;AAU/B,aAAO,kBAAkB,SAAS,KAAK,KAAK,YAAY,eAAe;AAAA,IACxE;AAAA,EACD;AACD;AAxCS;AA0CT,SAAS,qBACR,OAC8B;AAE9B,MACC,qCAAqC,UACrC,iCAAiC,WAAW,GAC3C;AACD,WAAO;AAAA,EACR;AAEA,aAAW,cAAc,kCAAkC;AAC1D,wBAAoB,UAAU;AAAA,EAC/B;AAGA,SAAO,cAAc,MAAM;AAAA,IAC1B,mBAAyE,wBACxE,SACA,KACA,QACI;AACJ,WAAK,MAAM;AACX,WAAK,MAAM;AACX,UAAI,MAAM,UAAU,QAAW;AAC9B,cAAM,IAAI,MAAM,sDAAsD;AAAA,MACvE;AACA,aAAO,MAAM,MAAM,OAAO;AAAA,IAC3B,GAXyE;AAAA,IAazE,cAA0B,wBAAC,MAAM,SAAS;AACzC,UAAI,SAAS,eAAe,MAAM,cAAc,QAAW;AAC1D,cAAM,aAAa,IAAI;AAAA,UACtB,KAAK,IAAI;AAAA,UACT,KAAK,QAAQ;AAAA,UACb,MAAM;AAAA,UAAC;AAAA,QACR;AACA,eAAO,MAAM,UAAU,UAAU;AAAA,MAClC;AAAA,IACD,GAT0B;AAAA,IAW1B,MAAM,SAAwD;AAC7D,aAAO;AAAA,QACN;AAAA,QACA,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,MACN;AAAA,IACD;AAAA,EACD;AACD;AAnDS;AAqDT,IAAI;AACJ,IAAI,OAAO,wCAAU,UAAU;AAC9B,kBAAgB,oBAAoB,mCAAK;AAC1C,WAAW,OAAO,wCAAU,YAAY;AACvC,kBAAgB,qBAAqB,mCAAK;AAC3C;AACA,IAAO,kCAAQ;",
  "names": []
}
